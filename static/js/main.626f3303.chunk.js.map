{"version":3,"sources":["theme.ts","components/inputs.ts","assets/logo.svg","components/images.ts","components/link.ts","components/hash.ts","components/text.ts","components/layout.ts","pages/common/splash.tsx","components/header.tsx","components/footer.tsx","assets/filter.svg","components/search.tsx","lib/debug.ts","components/list.tsx","components/plantlistitem.tsx","lib/plant.ts","pages/common/dashboard.tsx","components/info.tsx","state/info.ts","lib/matching.ts","pages/plant/info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","width","colors","primary","secondary","background","Input","styled","input","attrs","className","props","Icon","i","icon","LargeLogo","img","src","Logo","SmallLogo","Link","L","ActionLink","Hash","H1","h1","Text","span","extendBooleanProp","value","prop","B","F","A","S","concat","O","concatClass","val","Box","div","centerVertical","centerHorizontal","padded","Column","Row","Background","Body","MaxWidth","fadeIn","keyframes","Title","CenteredBackground","Splash","entryLink","to","Container","header","program","Recompose","title","href","a","footer","SearchBox","key","placeholder","FilterIcon","ListBox","List","Component","listItem","list","map","item","ListItemBox","PlantListItem","id","name","tag","tags","plantStorage","empty","constant","hasId","plant","pipe","R","findById","plants","getPlants","getItem","IO","E","flow","parse","json","stringify","setItem","debug","process","isDev","equals","trace","msg","C","SpacedRow","enhance","undefined","filterCurrentList","searchTerm","P","componentDidMount","e","_","setError","this","setItems","currentList","searchText","items","onChange","setSearchText","target","ListItem","UnderlinedText","Info","reducers","LOADING","FETCHED","ERROR","loading","Lens","fromProp","fetched","error","defaultState","info","modify","payload","infoReducer","state","action","patterns","d","type","match","dispatch","params","withRouter","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.626f3303.chunk.js","sourcesContent":["export interface Theme {\n    readonly width: number;\n    readonly colors: {\n        readonly primary: string;\n        readonly secondary: string;\n        readonly background: string;\n    };\n}\n\nconst theme:Theme = {\n    width: 800,\n    colors: {\n        primary: '#00FFFF',\n        secondary: '#F2F2F2',\n        background: '#000000'\n    }\n}\n\nexport default theme;","import styled from 'styled-components';\n\nexport const Input = styled.input.attrs({\n    className: 'pa2 outline-0 b0 '\n})`\n    width: 200px;\n    background-color: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.primary};\n    border-width: 0px;\n`;","export default __webpack_public_path__ + \"static/media/logo.b9c9a0c2.svg\";","import styled from 'styled-components';\nimport Logo from '../assets/logo.svg';\n\ninterface Icon {\n    icon: string;\n}\n\nexport const Icon = styled.i.attrs({\n    className: 'pa2'\n})<Icon>`\n\nbackground: url(${props => props.icon});\nbackground-size: contain;\nbackground-position: center;\nbackground-repeat: no-repeat;\n`;\n\nexport const LargeLogo = styled.img.attrs({\n    src: Logo\n})`height: 200px;`;\n\nexport const SmallLogo = styled(LargeLogo)`height: 16px;`;","import styled from 'styled-components';\nimport { Link as L } from 'react-router-dom';\n\nexport const Link = styled(L)`\n    color: ${props => props.theme.colors.secondary};\n    text-decoration: none;\n\n    &:hover {\n        opacity: 0.75;\n    }\n\n    &:active {\n        opacity: .5;\n    }\n`;\n\nexport const ActionLink = styled(Link).attrs({\n    className: 'pa2 br4'\n})`\n    background-color: ${props => props.theme.colors.secondary};\n    color: ${props => props.theme.colors.background};\n    font-weight: bold;\n`;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Hash = styled(Link).attrs({\n    className: 'dib pv1 bw1 ma1'\n})`\n    background-color: transparent;\n    color: ${props => props.theme.colors.secondary };\n    font-size: 12px;\n    outline: none;\n    opacity: 0.75;\n\n    &:hover {\n        opacity: 0.6;\n    }\n    &:active {\n        opacity: 0.4;\n    }\n`;","import styled from 'styled-components';\n\nexport const H1 = styled.h1`\n    color: ${ props => props.theme.colors.secondary};\n    font-size: 20px;\n    padding: 0px;\n    margin: 0px;\n`;\n\nexport const Text = styled.span`\n    color: ${ props => props.theme.colors.secondary};\n    font-size: 16px;\n    padding: 0px;\n    margin: 0px;\n`\n","import styled from 'styled-components';\nimport * as S from 'fp-ts/string';\nimport * as B from 'fp-ts/boolean';\nimport * as F from 'fp-ts/function';\nimport * as SG from 'fp-ts/Semigroup';\nimport * as A from 'fp-ts/Array';\nimport * as O from 'fp-ts/Option';\n\ninterface LayoutProps {\n    flex?: boolean\n    centerVertical?: boolean;\n    centerHorizontal?: boolean;\n    padded?: boolean;\n}\n\ninterface SpacingProps {\n    padded?: boolean;\n}\n\ninterface extendProp <P> {\n    (value: string): (prop?: P) => (className: string) => string;\n}\n\n// const extendNumberProp: extendProp<number> = value => prop => className =>\n\n\nconst extendBooleanProp:extendProp<boolean> = value => prop => className => \n    B.fold(\n        F.constant(className),\n        F.constant(A.reduce(className, S.Semigroup.concat)([' ', value]))\n    )(F.pipe(\n        O.fromNullable(prop),\n        O.getOrElse(\n            F.constFalse\n        )\n    ));\n\ninterface concatClass {\n    (value?: string): (className: string) => string;\n}\nconst concatClass:concatClass = value => className => F.pipe(\n    O.fromNullable(value),\n    O.getOrElse(\n        F.constant(S.empty)\n    ),\n    (val) => S.Semigroup.concat(className, val)\n)\n\nconst Box = styled.div.attrs<LayoutProps & SpacingProps>(props => ({\n    className: F.pipe(\n        extendBooleanProp('justify-center')(props.centerVertical)(''),\n        extendBooleanProp('items-center')(props.centerHorizontal),\n        extendBooleanProp('ph2')(props.padded)\n    )\n}))<LayoutProps & SpacingProps>``;\n\nexport const Column = styled(Box).attrs<LayoutProps & SpacingProps>(props => ({\n    className: concatClass(props.className)('flex flex-column')\n}))<LayoutProps & SpacingProps>``;\n\nexport const Row = styled(Box).attrs<LayoutProps & SpacingProps>(props => ({\n    className: concatClass(props.className)('flex flex-row')\n}))<LayoutProps & SpacingProps>``;\n\nexport const Background = styled(Box).attrs<LayoutProps & SpacingProps>(props => ({\n    className: concatClass(props.className)('flex flex-column w-100 h-100 ph2-ns')\n}))<LayoutProps & SpacingProps>`\n    background-color: ${props => props.theme.colors.background};\n`;\n\nexport const Body = styled.div.attrs({\n    className: 'flex flex-column flex-auto'\n})``;\n\nexport const MaxWidth = styled(Background)`\n    max-width: ${props => props.theme.width}px;\n`;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { LargeLogo, Link, Background, H1 } from '../../components';\n\nconst fadeIn = keyframes`\n    0% { opacity: 0 };\n    100% { opacity: 1 };\n`;\n\nconst Logo = styled(LargeLogo)`\n    margin-bottom: 20px;\n`;\n\nconst Title = styled(H1)`\n    margin-bottom: 45px;\n    animation-name: ${fadeIn};\n    animation-duration: 2s;\n`\n\nconst CenteredBackground = styled(Background).attrs<{className: string}>(props => ({\n    className: `items-center justify-center ${props.className}`\n}))``;\n\nconst entryText = 'Get Started';\nconst defaultEntryLink = '/plants';\n\ninterface Props {\n    entryLink?: string;\n}\n\nfunction Splash({ \n    entryLink = defaultEntryLink\n}:Props){\n    return (\n        <CenteredBackground>\n            <Logo/>\n            <Title>Germ</Title>\n            <Link to={entryLink}>{entryText}</Link>\n        </CenteredBackground>\n    )\n}\n\nexport default Splash;","import React from 'react';\nimport * as Recompose from 'recompose';\nimport styled from 'styled-components';\nimport { SmallLogo } from './';\n\n// CONSTANTS\n\n// INTERFACES\ninterface Props extends React.PropsWithChildren<unknown>{\n    title?: string;\n}\n\n// LOCAL COMPONENTS\nconst Container = styled.header.attrs({\n    className: 'flex ph1 pv2 items-center'\n})``;\n\nconst Title = styled.span.attrs({\n    className: 'pl1'\n})`\n    font-family: Helvetica;\n    color: #f2f2f2;\n`;\n\n// DEFAULT PROPS\nconst title = 'Germ';\n\n// COMPONENT\nfunction header(props: Props) {\n    return (\n        <Container>\n            <a href='/'>\n                <SmallLogo/>\n            </a>\n            <Title>\n                {props.title}\n            </Title>\n        </Container>\n    );\n};\n\nconst program = Recompose.compose<Props, Props>(\n    Recompose.defaultProps({\n        title\n    })\n)\n\nexport default program(header);","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.header.attrs({\n    className: 'flex ph1 pv2 items-center justify-end'\n})``;\n\nconst Link = styled.a.attrs({\n    href: 'https://github.com/beaubaker1027/germ',\n    className: 'pl1 no-underline'\n})`\n    color: ${props => props.theme.colors.secondary};\n`;\n\nfunction footer() {\n    return (\n        <Container>\n            <Link>Github</Link>\n        </Container>\n    );\n};\n\nexport default footer;","export default __webpack_public_path__ + \"static/media/filter.5792311d.svg\";","import React from 'react';\nimport * as Recompose from 'recompose';\nimport styled from 'styled-components';\nimport { Input, Icon } from '.';\nimport FilterIcon from '../assets/filter.svg';\n\n// Interfaces\ninterface Props extends React.PropsWithChildren<unknown>, \n                        Omit<\n                            React.InputHTMLAttributes<HTMLInputElement>, \n                            'className' | 'ref' | 'children' | 'as'\n                        >{\n}\n// Local Components\nconst SearchBox = styled.div.attrs({\n    className: 'dib'\n})`\n    border-style: solid;\n    border-color: ${props => props.theme.colors.primary};\n    border-width: 0px 0px 1px 0px;\n`;\n\n// Defaults\n\nconst defaultPlaceholder = 'Search by Name or Tag';\n\n// Component\nfunction SearchBar(props:Props ) {\n    return (\n        <SearchBox>\n            <Input {...props}/>\n            <Icon icon={FilterIcon}/>\n        </SearchBox>\n    )\n};\n\n\nconst program = Recompose.compose<Props, Props>(\n    Recompose.defaultProps({\n        placeholder: defaultPlaceholder\n    })\n);\n\nexport default program(SearchBar);","import * as S from 'fp-ts/string';\nimport * as C from 'fp-ts/Console';\nimport * as O from 'fp-ts/Option';\nimport * as IO from 'fp-ts/IO';\nimport * as B from 'fp-ts/boolean';\nimport * as P from 'fp-ts/Predicate';\nimport * as F from 'fp-ts/function';\n\ntype Debug = boolean;\ntype Msg = Error | String;\n\ninterface get {\n    (k: string): IO.IO<O.Option<string>>;\n}\nconst get:get = (key) => \n    F.pipe(\n        process.env[key],\n        O.fromNullable,\n        IO.of\n    )\n\nexport const debug = get('NODE_ENV');\n\nconst isDev = F.pipe(\n    debug,\n    IO.map(\n        O.fold(\n            F.constFalse,\n            val => S.Eq.equals('development', val)\n        )\n    )\n);\n\ninterface trace {\n    (msg: Msg): void;\n}\n\n\nexport const trace:trace = F.flow(\n    (msg) => \n        B.fold(\n            F.constVoid, \n            C.error(msg)\n        )(isDev())\n);","import React from 'react';\nimport styled from 'styled-components';\n\n// Interfaces\ninterface Props<I> extends React.PropsWithChildren<unknown> {\n    listItem: ({ item }: { item: I }) => JSX.Element ;\n    list: I[];\n}\n\n// Local Components\nconst ListBox = styled.div.attrs({\n    className: 'flex flex-column ma1'\n})``;\n\n// Defaults\n\nconst List =  <I extends object>({ \n    listItem: Component, \n    list = [], \n    ...props \n}:Props<I>) =>\n    <ListBox>\n    {\n        list.map((item, i: number) => <Component item={item} key={i}/>)\n    }\n    </ListBox>\n\nexport default List;","import React from 'react';\nimport styled from 'styled-components';\nimport * as A from 'fp-ts/Array';\nimport { Link, Column, Row, Hash } from './';\nimport { Plant } from '../lib/plant';\n\n// Interfaces\ninterface Props extends React.PropsWithChildren<unknown> {\n    item: Plant;\n}\n\n// Local Components\nconst ListItemBox = styled.div.attrs({\n    className: 'pv1'\n})``;\n\n// Defaults\n\nconst PlantListItem = <I extends Plant>({\n    item\n}: Props) => \n    <ListItemBox>\n        <Column>\n        <Link to={`/plants/${item.id}`}>{item.name}</Link>\n        <Row>\n            {\n                A.map<string, JSX.Element>(\n                    (tag) => <Hash to={`/tags/${tag}`}>#{tag}</Hash>\n                )(item.tags)\n            }\n        </Row>\n        </Column>\n    </ListItemBox>\n;\n\nexport default PlantListItem;","import { pipe, flow, constant } from 'fp-ts/function';\nimport * as T from 'fp-ts/Task';\nimport * as A from 'fp-ts/Array';\nimport * as O from 'fp-ts/Option';\nimport * as IO from 'fp-ts/IO';\nimport * as E from 'fp-ts/Either';\nimport * as P from 'fp-ts/Predicate';\nimport * as R from 'fp-ts/Record';\nimport { stringify, parse, Json } from 'fp-ts/Json';\nimport { getItem, setItem, removeItem } from 'fp-ts-local-storage';\nimport { v4 as uuid } from 'uuid';\n\nexport interface Plant {\n    readonly id: Uuid;\n    readonly name: Name;\n    readonly tags: Tag[];\n};\n\ntype Uuid = string;\ntype Name = string;\ntype Tag = string;\n\nconst plantStorage:Readonly<string> = 'PLANTS';\n\ninterface empty {\n    (): Plant[]\n}\n\nconst empty:empty = constant([]);\n\ninterface hasId {\n    (id: Uuid): (plant: Plant) => boolean\n}\n\nconst hasId:hasId = (id) => (plant) => pipe(\n                    // is there a way to define this better ↓\n    R.lookup('id')(plant as unknown as Record<string, Uuid | Name | Tag[]>),\n    O.fold(\n        constant(false),\n        val => val === id\n    )\n);\n\ninterface fromJson {\n    (json: Json): Plant[]\n}\n\nconst fromJson:fromJson = (json) => json as unknown as Plant[];\n\ninterface of {\n    (plant: Omit<Plant, 'id'>): Plant\n}\n\nexport const of:of = ( plant) => Object.assign({\n    id: uuid(),\n    ...plant\n});\n\ninterface findById {\n    (id: Uuid): (plants: Plant[]) => O.Option<Plant>\n}\n\nexport const findById:findById = ( id ) => ( plants ) => \n    A.findFirst(hasId(id))(plants);\n\ninterface replacePlant {\n    (plant: Plant): (plant: Plant[]) => Plant[]\n}\n\nconst replacePlant:replacePlant = ( plant: Plant ) => \n    A.map( (p:Plant) => findById(plant.id) ? plant : p);\n\ninterface getPlants {\n    (): E.Either<unknown, Plant[]>\n}\n\nexport const getPlants:getPlants = pipe(\n    getItem(plantStorage),\n    IO.map(\n        O.foldW(\n            constant(E.of<unknown, Plant[]>(empty())),\n            flow(\n                parse,\n                E.chain((json) => E.right(fromJson(json)))\n            )\n        )\n    )\n);\n\ninterface storePlants {\n    (value: string): IO.IO<void>\n}\n\nconst storePlants:storePlants = (value) => setItem(plantStorage, value);\n\ninterface storeString {\n    (val: Plant[]): E.Either<unknown, IO.IO<void>>\n}\n\nconst storeString: storeString = flow(\n    stringify,\n    E.chain( val => E.of(storePlants(val)))\n);\n\ninterface addPlant {\n    (plant: Omit<Plant, 'id'>): IO.IO<E.Either<unknown, true>>\n}\n\nexport const addPlant:addPlant = (plant) => pipe(\n    getPlants,\n    IO.map(\n        E.chain(\n            flow(\n                A.append(of(plant)),\n                storeString,\n                E.chain(_ => E.right(true))\n            )\n        )\n    )\n);\n\ninterface updatePlant {\n    (plant: Plant): IO.IO<E.Either<unknown, true>>\n}\n\nexport const updatePlant:updatePlant = (plant) => pipe(\n    getPlants,\n    IO.map(\n        E.chain(\n            flow(\n                replacePlant(plant),\n                storeString,\n                E.chain(_ => E.right(true))\n            )\n        )\n    )\n);\n\ninterface removePlant {\n    (id: Uuid): IO.IO<E.Either<unknown, IO.IO<void>>>\n}\n\nexport const removePlant:removePlant = (id) => pipe(\n    getPlants,\n    IO.map(\n        E.chain(\n            flow(\n                A.filter(P.not(hasId(id))),\n                storeString\n            )\n        )\n    )\n);\n","import React from 'react';\nimport * as Recompose from 'recompose';\nimport { Link } from 'react-router-dom';\nimport * as A from 'fp-ts/Array';\nimport * as S from 'fp-ts/string';\nimport * as IO from 'fp-ts/IO';\nimport * as P from 'fp-ts/Predicate';\nimport * as E from 'fp-ts/Either';\nimport styled from 'styled-components';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport { Background, Body, Row, Column, ActionLink, MaxWidth } from '../../components';\nimport SearchBar from '../../components/search';\nimport List from '../../components/list';\nimport ListItem from '../../components/plantlistitem';\nimport { getPlants, Plant } from '../../lib/plant';\nimport { flow, pipe } from 'fp-ts/lib/function';\nimport { trace } from '../../lib/debug';\n\n// Interfaces\ninterface Props extends React.PropsWithChildren<unknown> {\n    filterCurrentList: filterCurrentList;\n    searchText: string;\n    setSearchText: setSearchText;\n    items: Plant[];\n    setItems: setItems;\n    error?: string;\n    setError: setError;\n}\n\ntype ComposedProps = \n    'filterCurrentList' \n    | 'searchText' \n    | 'setSearchText' \n    | 'items' \n    | 'setItems' \n    | 'error' \n    | 'setError';\n\ntype PostInjectProps = Omit<Props, ComposedProps>;\n\ninterface filterCurrentList {\n    (list: Plant[], searchText: string ):Plant[];\n}\n\ninterface handleKeyPress {\n    (props: Props):React.KeyboardEventHandler<HTMLInputElement>;\n}\n\ninterface setSearchText {\n    (str: string): void;\n}\n\ninterface setItems {\n    (plants: Plant[]): void;\n}\n\ninterface setError {\n    (error: string): void;\n}\n// LOCAL COMPONENTS\nconst SpacedRow = styled(Row)`\n    justify-content: space-between;\n`;\n\nconst SLink = styled(Link).attrs({\n    className: 'pa2 br4'\n})`\n    background-color: ${props => props.theme.colors.secondary};\n    color: ${props => props.theme.colors.background};\n    text-decoration: none;\n    font-weight: bold;\n\n    &:hover {\n        opacity: .75;\n    }\n    &:active {\n        opacity: .5;\n    }\n`;\n\n// Defaults\nconst filterCurrentList: filterCurrentList = ( list, searchTerm ) =>\n    A.filter<Plant>( item  => \n        P.or<string>( \n            searchTerm => S.includes(S.toLowerCase(searchTerm))(S.toLowerCase(item.name)) \n        ) ( \n            searchTerm =>  A.some<string>(tag => S.includes(S.toLowerCase(searchTerm))(S.toLowerCase(tag)))(item.tags) \n        )(searchTerm)\n    )(list);\n\n// Component\n  \nfunction Dashboard(props:Props) {\n\n    const currentList = S.isEmpty(props.searchText) ? props.items : props.filterCurrentList(props.items, props.searchText);\n\n    return (\n        <Background centerHorizontal>\n            <MaxWidth>\n                <Header title={'Dashboard'}/>\n                <Body>\n                    <SpacedRow padded centerVertical>\n                        <SearchBar onChange={(e) => props.setSearchText(e.target.value)}/>\n                        <ActionLink to={'/plants/add'}>+ Add</ActionLink>\n                    </SpacedRow>\n                    <List<Plant> listItem={ListItem} list={currentList}/>\n                </Body>\n                <Footer/>\n            </MaxWidth>\n        </Background>\n    )\n};\n\nconst enhance = Recompose.compose<Props, PostInjectProps>(\n    Recompose.withState('searchText', 'setSearchText', ''),\n    Recompose.withState( 'items', 'setItems', []),\n    Recompose.withState( 'error', 'setError', undefined),\n    Recompose.withProps({\n        filterCurrentList\n    }),\n    Recompose.lifecycle<Props, unknown>({\n        componentDidMount(){\n            pipe(\n                getPlants,\n                IO.map(\n                    E.fold(\n                        flow(\n                            e => trace(e as Error),\n                            _ => this.props.setError('There was an issue fetching plants')\n                        ),\n                        this.props.setItems\n                    )\n                )\n            )();\n        }\n    })\n);\n\nexport default enhance(Dashboard);","import React from 'react';\nimport * as Recompose from 'recompose';\nimport styled from 'styled-components';\nimport { Plant } from '../lib/plant';\nimport { Hash, H1, Text, Column, Row } from './';\n\n// CONSTANTS\n// INTERFACES\ninterface Props extends React.PropsWithChildren<unknown> {\n    plant?: Plant;\n}\n\n// ALIASES\n\n// LOCAL COMPONENTS\nconst UnderlinedText = styled(Text)`\n    border-bottom: solid 1px ${props => props.theme.colors.secondary};\n`;\n\n// DEFAULT PROPS\n\n// COMPONENT\nfunction Info({ plant }: Props) {\n    return(\n        <Column>\n            <div>\n                <H1>{plant?.name}</H1>\n                <Column>\n                    <UnderlinedText>Tags</UnderlinedText>\n                    <Row>\n                    {\n                        plant?.tags?.map( tag => <Hash to={`/tags/${tag}`}>#{tag}</Hash>)\n                    }\n                    </Row>\n                </Column>\n            </div>\n        </Column>\n    )\n}\n\nexport default Info;","import { Plant } from '../lib/plant'\nimport * as F from 'fp-ts/function';\nimport * as S from 'fp-ts/string';\nimport { Lens } from 'monocle-ts'\nimport { match, Matchable } from '../lib/matching';\n\n\nexport interface State {\n    loading: boolean;\n    info?: Plant;\n    error?: string;\n}\n\ninterface Reducers extends Matchable {\n    'LOADING': Reducer<LoadingPayload>;\n    'FETCHED': Reducer<InfoPayload>;\n    'ERROR': Reducer<ErrorPayload>;\n}\n\ntype Keys = 'LOADING' | 'FETCHED' | 'ERROR'\n\ninterface Type {\n    type: Keys\n}\n\ninterface LoadingPayload {\n\n}\n\ninterface InfoPayload {\n    info: Plant;\n}\n\ninterface ErrorPayload {\n    error: string;\n}\n\ntype Payloads = \n    LoadingPayload |\n    InfoPayload |\n    ErrorPayload;\n\ninterface LoadingAction extends Type {\n    payload: LoadingPayload\n}\n\ninterface InfoAction extends Type {\n    payload: InfoPayload;\n};\n\ninterface ErrorAction extends Type {\n    payload: ErrorPayload\n}\n\nexport type Action = \n    LoadingAction | \n    InfoAction |\n    ErrorAction;\n    \n\ninterface infoReducer {\n    (reducers:Reducers): ( state: State, action: Action) => State;\n}\n\ninterface Reducer <P>{\n    (val: P): (state:State) => State;\n}\n\nexport const LOADING:Keys = 'LOADING';\nexport const FETCHED:Keys = 'FETCHED';\nexport const ERROR:Keys = 'ERROR';\n\nconst loading = Lens.fromProp<State>()('loading');\nconst fetched = Lens.fromProp<State>()('info');\nconst error = Lens.fromProp<State>()('error');\n\nexport const defaultState: State = {\n    loading: false,\n    info: undefined,\n    error: undefined\n}\n\nconst reducers:Reducers = {\n    [LOADING]: _ => F.flow(\n        loading.modify(F.constTrue)\n    ),\n    [FETCHED]: payload => F.flow(\n        loading.modify(F.constFalse),\n        fetched.modify(F.constant(payload.info)),\n        error.modify(F.constant(S.empty))\n    ),\n    [ERROR]: payload => F.flow(\n        loading.modify(F.constFalse),\n        error.modify(F.constant(payload.error)),\n    )\n}\n\nconst reducer:infoReducer = (reducers) => ( state, action ) =>  \n    match<Reducers, Reducer<Payloads>>(\n        reducers, \n        F.constant(F.constant(state))\n    )(action.type)(action.payload)(state);\n\nexport const infoReducer = reducer(reducers);\n\n\n    ","import * as A from 'fp-ts/Array';\nimport * as F from 'fp-ts/function';\nimport * as R from 'fp-ts/Record';\nimport * as O from 'fp-ts/Option';\n\ninterface match {\n    <P extends Matchable, B extends any>(patterns: P, d: B): (value: Key) => B;\n}\n\nexport interface Matchable {\n    [key: string]: any;\n}\n\ntype Key = string\n\nexport const match:match = ( patterns, d ) => F.flow(\n    (val) => R.lookup(val)(patterns),\n    O.getOrElse(F.constant(d))\n);\n    \n","import React from 'react';\nimport * as Recompose from 'recompose';\nimport { InfoParams } from '../../App';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as A from 'fp-ts/Array';\nimport * as F from 'fp-ts/function';\nimport * as O from 'fp-ts/Option';\nimport * as IO from 'fp-ts/IO';\nimport * as E from 'fp-ts/Either';\nimport { Background, Body, MaxWidth } from '../../components';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport { findById } from '../../lib/plant';\nimport PlantInfo from '../../components/info';\nimport { getPlants } from '../../lib/plant';\nimport { \n    infoReducer, \n    defaultState, \n    LOADING,\n    ERROR, \n    FETCHED, \n    State, \n    Action } from '../../state/info';\nimport { trace } from '../../lib/debug';\n\n// CONSTANTS\n\n// INTERFACES\ninterface Props extends React.PropsWithChildren<unknown>, \n                        Recompose.reducerProps<State, Action, 'state', 'dispatch'>, \n                        RouteComponentProps<InfoParams> {\n};\n\ntype PostInjectProps = Omit<\n    Props\n    , 'state'\n    | 'dispatch'>;\n// ALIASES\n\n// LOCAL COMPONENTS\n\n// DEFAULT PROPS\n\n// COMPONENT\nconst Info = (props: Props) => (\n    <Background centerHorizontal>\n        <MaxWidth>\n        <Header title={\"Plant Info\"}/>\n        <Body>\n            <PlantInfo plant={props.state?.info}/>\n       </Body>\n       <Footer/>\n       </MaxWidth>\n    </Background>\n);\n\nconst program = Recompose.compose<Props, PostInjectProps>(\n    Recompose.withReducer('state', 'dispatch', infoReducer, defaultState),\n    Recompose.lifecycle<Props, unknown>({\n        componentDidMount(){\n            this.props.dispatch({type: LOADING, payload: {}});\n            F.pipe(\n                getPlants,\n                IO.map(\n                    E.fold(\n                        F.flow(\n                            e => trace(e as Error),\n                            _ => this.props.dispatch({ type: ERROR, payload: {error: 'There was an issue fetching plants'}})\n                        ),\n                        F.flow(\n                            findById(this.props.match.params.id),\n                            O.fold(\n                                () => this.props.dispatch({ type: ERROR, payload: { error: 'Couldn\\'t find a plant with that id' }}),\n                                plant => this.props.dispatch({ type: FETCHED, payload: { info: plant } } )\n                            )\n                        )\n                    )\n                )\n            )();\n        }\n    })\n);\n\nexport default withRouter(program(Info));","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Splash from './pages/common/splash';\nimport Dashboard from './pages/common/dashboard';\nimport Info from './pages/plant/info';\nimport { v4 } from 'uuid'\n\ninterface IdParam {\n  id: string\n};\n\nexport interface InfoParams extends IdParam {\n};\n\nexport interface EditParams extends IdParam {\n\n}\n\nconst MaxWidth = styled.div`\n  max-width: 800px;\n`;\n\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Splash/>\n          </Route>\n          <Route exact path='/plants'>\n            <Dashboard/>\n          </Route>\n          <Route path='/plants/add'>\n            <div>Hello</div>\n          </Route>\n          <Route path='/plants/edit/:id'>\n            <div>Hello</div>\n          </Route>\n          <Route path='/plants/:id'>\n            <Info/>\n          </Route>\n          <Route path='/journal'>\n            <div>Hello</div>\n          </Route>\n          <Route path='/journal/add'>\n            <div>Hello</div>\n          </Route>\n          <Route path='/journal/edit/:id'>\n            <div>Hello</div>\n          </Route>\n          <Route path='/journal/:id'>\n            <div>Hello</div>\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Splash from './pages/common/splash';\nimport theme from './theme';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App/>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}